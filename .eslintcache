[{"/Users/YOSHISU/code/mcspach/bixly-messaging/src/index.js":"1","/Users/YOSHISU/code/mcspach/bixly-messaging/src/reportWebVitals.js":"2","/Users/YOSHISU/code/mcspach/bixly-messaging/src/App.js":"3","/Users/YOSHISU/code/mcspach/bixly-messaging/src/components/NewMessageForm.js":"4","/Users/YOSHISU/code/mcspach/bixly-messaging/src/components/MessageList.js":"5","/Users/YOSHISU/code/mcspach/bixly-messaging/src/components/MessageDetails.js":"6","/Users/YOSHISU/code/mcspach/bixly-messaging/src/components/LoginForm.js":"7","/Users/YOSHISU/code/mcspach/bixly-messaging/src/components/ErrorBoundary.js":"8","/Users/YOSHISU/code/mcspach/bixly-messaging/src/components/Tab.js":"9"},{"size":562,"mtime":1611183863008,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611012646246,"results":"12","hashOfConfig":"11"},{"size":1808,"mtime":1611204946651,"results":"13","hashOfConfig":"11"},{"size":1306,"mtime":1611184813907,"results":"14","hashOfConfig":"11"},{"size":844,"mtime":1611245952445,"results":"15","hashOfConfig":"11"},{"size":288,"mtime":1611183929914,"results":"16","hashOfConfig":"11"},{"size":1731,"mtime":1611244557920,"results":"17","hashOfConfig":"11"},{"size":433,"mtime":1611183940009,"results":"18","hashOfConfig":"11"},{"size":315,"mtime":1611183907498,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1mux7o0",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/YOSHISU/code/mcspach/bixly-messaging/src/index.js",["43"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["44","45"],"/Users/YOSHISU/code/mcspach/bixly-messaging/src/reportWebVitals.js",[],["46","47"],"/Users/YOSHISU/code/mcspach/bixly-messaging/src/App.js",[],"/Users/YOSHISU/code/mcspach/bixly-messaging/src/components/NewMessageForm.js",["48"],"import React, { Component } from 'react';\n// import API from './API';\nimport axios from 'axios';\nimport { computeHeadingLevel } from '@testing-library/react';\n\nclass NewMessageForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n        title: \"\",\n        body: \"\",\n        receiver: \"\"\n    }\n  }\n\n  handlePostMessage = (event) => {\n    event.preventDefault();\n\n    axios.post('/messages/', {\n      title: this.state.title,\n      body: this.state.body,\n      receiver: this.state.receiver\n    }).then((response) => {\n        console.log(response);\n        console.log(response.data);\n      })\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n    this.setState({ [event.target.name]: event.target.value });\n    console.log(this.state);\n  }\n\n  render() {\n    return(\n      <div className=\"NewMessageForm\">\n         <form onSubmit={this.handlePostMessage}>\n           <label>Title: <input type=\"text\" name=\"title\" onChange={this.handleChange}/></label>\n           <label>Body: <input type=\"textarea\" name=\"body\" onChange={this.handleChange}/></label>\n           <label>Reciever: <input type=\"text\" name=\"receiver\" onChange={this.handleChange}/></label>\n           <button type=\"submit\">Send</button>\n         </form>\n      </div>\n    )\n  }\n}\n\nexport default NewMessageForm;","/Users/YOSHISU/code/mcspach/bixly-messaging/src/components/MessageList.js",["49"],"/Users/YOSHISU/code/mcspach/bixly-messaging/src/components/MessageDetails.js",[],["50","51"],"/Users/YOSHISU/code/mcspach/bixly-messaging/src/components/LoginForm.js",[],"/Users/YOSHISU/code/mcspach/bixly-messaging/src/components/ErrorBoundary.js",[],"/Users/YOSHISU/code/mcspach/bixly-messaging/src/components/Tab.js",[],{"ruleId":"52","severity":1,"message":"53","line":6,"column":27,"nodeType":"54","messageId":"55","endLine":6,"endColumn":33},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"60"},{"ruleId":"58","replacedBy":"61"},{"ruleId":"52","severity":1,"message":"62","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":26,"column":37,"nodeType":"65","messageId":"66","endLine":26,"endColumn":39},{"ruleId":"56","replacedBy":"67"},{"ruleId":"58","replacedBy":"68"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],"'computeHeadingLevel' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["69"],["70"],"no-global-assign","no-unsafe-negation"]